/*
 * ChartSidePanel.java
 *
 * Created on Nov 22, 2010, 11:13:02 AM
 */
package com.pivotal.jvsd;

import com.pivotal.jvsd.stats.StatFileParser.StatValue;

/**
 *
 * @author Vince Ford
 */
public class ChartSidePanel extends javax.swing.JPanel {

	VSDChartWindow parent = null;

	/**
	 * Creates new form ChartSidePanel
	 */
	public ChartSidePanel(VSDChartWindow parent) {
		initComponents();

		scalarOperationComboBox.removeAllItems();
		scalarOperationComboBox.addItem("*");
		scalarOperationComboBox.addItem("/");
		scalarOperationComboBox.addItem("+");
		scalarOperationComboBox.addItem("-");
		filterComboBox.removeAllItems();
		filterComboBox.addItem("Per Second");
		filterComboBox.addItem("No Filter");
		filterComboBox.addItem("Per Sample");
		filterComboBox.addItem("Aggregate");
		StatNameComboBox.removeAllItems();
		StatNameComboBox.addActionListener(parent);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    StatNameComboBox = new javax.swing.JComboBox();
    minLabel = new javax.swing.JLabel();
    minField = new javax.swing.JTextField();
    maxLabel = new javax.swing.JLabel();
    maxField = new javax.swing.JTextField();
    meanLabel = new javax.swing.JLabel();
    meanField = new javax.swing.JTextField();
    stdDevLabel = new javax.swing.JLabel();
    stdDevField = new javax.swing.JTextField();
    unitsLabel = new javax.swing.JLabel();
    unitsField = new javax.swing.JTextField();
    descriptionLabel = new javax.swing.JLabel();
    jScrollPane1 = new javax.swing.JScrollPane();
    descriptionField = new javax.swing.JEditorPane();
    filterComboBox = new javax.swing.JComboBox();
    jLabel1 = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    graphLeftAxisCheckBox = new javax.swing.JCheckBox();
    samplesField = new javax.swing.JTextField();
    samplesLabel = new javax.swing.JLabel();
    scalarLabel = new javax.swing.JLabel();
    scalarSizeSpinner = new javax.swing.JSpinner();
    scalarOperationComboBox = new javax.swing.JComboBox();
    jSeparator1 = new javax.swing.JSeparator();
    xLabel = new javax.swing.JLabel();
    yLabel = new javax.swing.JLabel();

    StatNameComboBox.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
    StatNameComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
    StatNameComboBox.setAutoscrolls(true);
    StatNameComboBox.setName("StatComboBox"); // NOI18N

    minLabel.setText("Min");

    minField.setEditable(false);
    minField.setText("Not Available");

    maxLabel.setText("Max");

    maxField.setEditable(false);
    maxField.setText("Not Available");

    meanLabel.setText("Mean");

    meanField.setEditable(false);
    meanField.setText("Not Available");

    stdDevLabel.setText("Std Dev");

    stdDevField.setEditable(false);
    stdDevField.setText("Not Available");

    unitsLabel.setText("Units");

    unitsField.setEditable(false);
    unitsField.setText("No Units");

    descriptionLabel.setText("Description");

    descriptionField.setEditable(false);
    jScrollPane1.setViewportView(descriptionField);

    filterComboBox.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
    filterComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

    jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
    jLabel1.setText("Y");

    jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
    jLabel2.setText("X");

    graphLeftAxisCheckBox.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
    graphLeftAxisCheckBox.setText("Left Axis");
    graphLeftAxisCheckBox.setToolTipText("Unset to put axis on right side of graph");

    samplesField.setEditable(false);
    samplesField.setText("Not Available");

    samplesLabel.setLabelFor(samplesField);
    samplesLabel.setText("Samples");

    scalarLabel.setLabelFor(scalarOperationComboBox);
    scalarLabel.setText("Scalar");

    scalarOperationComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

    xLabel.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
    xLabel.setText("xLabel");

    yLabel.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
    yLabel.setText("yLabel");

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(graphLeftAxisCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
              .addComponent(jSeparator1))
            .addContainerGap())
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(descriptionLabel)
              .addComponent(unitsLabel)
              .addComponent(stdDevLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(meanLabel)
              .addComponent(maxLabel)
              .addComponent(minLabel)
              .addComponent(samplesLabel)
              .addComponent(scalarLabel)
              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                .addComponent(StatNameComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(filterComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 192, Short.MAX_VALUE))
              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(unitsField, javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(stdDevField, javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(meanField, javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(maxField, javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(minField, javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(samplesField, javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                  .addComponent(scalarOperationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(scalarSizeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
              .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                  .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addComponent(xLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addComponent(yLabel))))
            .addGap(0, 0, Short.MAX_VALUE))))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(StatNameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(filterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(graphLeftAxisCheckBox)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel2)
          .addComponent(xLabel))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel1)
          .addComponent(yLabel))
        .addGap(86, 86, 86)
        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(scalarLabel)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(scalarOperationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(scalarSizeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(samplesLabel)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(samplesField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(minLabel)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(minField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(maxLabel)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(maxField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(meanLabel)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(meanField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(stdDevLabel)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(stdDevField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(unitsLabel)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(unitsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(descriptionLabel)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap())
    );
  }// </editor-fold>//GEN-END:initComponents


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JComboBox StatNameComboBox;
  private javax.swing.JEditorPane descriptionField;
  private javax.swing.JLabel descriptionLabel;
  private javax.swing.JComboBox filterComboBox;
  private javax.swing.JCheckBox graphLeftAxisCheckBox;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JSeparator jSeparator1;
  private javax.swing.JTextField maxField;
  private javax.swing.JLabel maxLabel;
  private javax.swing.JTextField meanField;
  private javax.swing.JLabel meanLabel;
  private javax.swing.JTextField minField;
  private javax.swing.JLabel minLabel;
  private javax.swing.JTextField samplesField;
  private javax.swing.JLabel samplesLabel;
  private javax.swing.JLabel scalarLabel;
  private javax.swing.JComboBox scalarOperationComboBox;
  private javax.swing.JSpinner scalarSizeSpinner;
  private javax.swing.JTextField stdDevField;
  private javax.swing.JLabel stdDevLabel;
  private javax.swing.JTextField unitsField;
  private javax.swing.JLabel unitsLabel;
  private javax.swing.JLabel xLabel;
  private javax.swing.JLabel yLabel;
  // End of variables declaration//GEN-END:variables

	public void setXLabel(String label) {
		xLabel.setText(label);
	}

	public void setYLabel(String label) {
		yLabel.setText(label);
	}

	void setMin(double min) {
		String fmin = String.format("%.2f", min);
		minField.setText(fmin);
	}

	void setMax(double max) {
		String fmax = String.format("%.2f", max);
		maxField.setText(fmax);
	}

	void setStdDev(double stdDev) {
		String fsd = String.format("%.2f", stdDev);
		stdDevField.setText(fsd);
	}

	void setMean(double mean) {
		String fm = String.format("%.2f", mean);
		meanField.setText(fm);
	}

	void setDescription(String description) {
		descriptionField.setText(description);
	}

	void setStatName(String name) {
		StatNameComboBox.addItem(name);
		StatNameComboBox.setSelectedItem(name);
	}

	void setUnits(String units) {
		unitsField.setText(units);
	}

	void updateValues() {
		//to be used in the future
	}

	void setSamples(int snapshotsSize) {
		samplesField.setText(Integer.toString(snapshotsSize));
	}

	void setFilterComboBox(int filter) {

		if (filter == StatValue.FILTER_NONE) {
			filterComboBox.setSelectedIndex(1);
		} else {
			if (filter == StatValue.FILTER_PERSAMPLE) {
				filterComboBox.setSelectedIndex(2);
			} else {
				if (filter == StatValue.FILTER_PERSEC) {
					filterComboBox.setSelectedIndex(0);
				}
			}

		}

	}

}
